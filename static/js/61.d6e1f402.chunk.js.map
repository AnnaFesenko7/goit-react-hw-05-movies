{"version":3,"file":"static/js/61.d6e1f402.chunk.js","mappings":"uPAEaA,EAAUC,EAAAA,GAAAA,IAAH,6EAIPC,EAAcD,EAAAA,GAAAA,IAAH,2F,SC0DxB,MA3DA,WACE,OAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MAajB,OAZAC,QAAQC,IAAIH,IACZI,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GACwBP,GACrBQ,MAAK,SAAAC,GACJ,OAAOA,KAERD,KAAKT,KACP,CAACC,KAKF,iCACE,mBAAQU,QAJG,kBAAMR,GAAU,IAI3B,qBAECJ,IACC,UAACJ,EAAD,YACE,gBACEiB,IAAG,yCAAoCb,EAAac,aACpDC,IAAKf,EAAagB,SAEpB,UAAClB,EAAD,YACE,0BACGE,EAAaiB,eADhB,IAEGjB,EAAakB,aAAaC,MAAM,KAAK,GAFxC,QAIA,wCAA4C,GAA5BnB,EAAaoB,aAA7B,SACA,sCACA,uBAAIpB,EAAaqB,YACjB,mCACCrB,EAAasB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,YAIzD,mBACA,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAE,OAAUC,SAAS,EAA3B,qBAIF,yBACE,SAAC,KAAD,CAAMD,GAAE,UAAaC,SAAS,EAA9B,2BAKJ,mBACA,SAAC,KAAD,S,qJC1DN,IAAMC,EAAU,mCACVC,EAAW,+BAIV,SAASC,IAEd,OAAOC,EADE,UAAMF,GAAN,OAHM,sBAGN,oBAAqCD,IACrBnB,MAAK,SAAAuB,GAC5B,OAAOA,EAAKC,WAIT,SAASC,EAAqBjC,GAEnC,OAAO8B,EADE,UAAMF,EAAN,kBAAwB5B,EAAxB,oBAA2C2B,IAI/C,SAASO,EAAgBlC,GAE9B,OAAO8B,EADE,UAAMF,EAAN,kBAAwB5B,EAAxB,4BAAmD2B,IACnCnB,MAAK,SAAAuB,GAAI,OAAIA,EAAKI,QAEtC,SAASC,EAAgBpC,GAE9B,OAAO8B,EADE,UAAMF,EAAN,kBAAwB5B,EAAxB,4BAAmD2B,IACnCnB,MAAK,SAAAuB,GAAI,OAAIA,EAAKC,WAEtC,SAASK,EAAkBC,GAEhC,OAAOR,EADE,UAAMF,EAAN,iCAAuCD,EAAvC,kBAAwDW,IACxC9B,MAAK,SAAAuB,GAAI,OAAIA,EAAKC,WAG7C,SAASF,EAAaS,GACpB,OAAOC,MAAMD,GAAK/B,MAAK,SAAAC,GACrB,IAAKA,EAAEgC,GACL,MAAMC,MAAMjC,EAAEkC,YAEhB,OAAOlC,EAAEmC","sources":["components/views/MovieDetailsView.styled.js","components/views/MovieDetailsView.jsx","services/fetchMoviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\nexport const Description = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 30px;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams, Link, Outlet, useNavigate } from 'react-router-dom';\nimport * as moviesSearchService from '../../services/fetchMoviesApi';\nimport { Wrapper, Description } from './MovieDetailsView.styled';\n\nfunction MovieDetailsView() {\n  const [movieDetails, setMovieDetails] = useState(null);\n\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  console.log(navigate);\n  useEffect(() => {\n    moviesSearchService\n      .FetchMovieDetailsApi(movieId)\n      .then(r => {\n        return r;\n      })\n      .then(setMovieDetails);\n  }, [movieId]);\n\n  const goBack = () => navigate(-1);\n\n  return (\n    <>\n      <button onClick={goBack}>Go back</button>\n\n      {movieDetails && (\n        <Wrapper>\n          <img\n            src={`https://image.tmdb.org/t/p/w400${movieDetails.poster_path}`}\n            alt={movieDetails.title}\n          />\n          <Description>\n            <h2>\n              {movieDetails.original_title}(\n              {movieDetails.release_date.split('-')[0]})\n            </h2>\n            <p>User Score: {movieDetails.vote_average * 10} %</p>\n            <h3>Overview</h3>\n            <p>{movieDetails.overview}</p>\n            <h3>Genres</h3>\n            {movieDetails.genres.map(genre => genre.name).join(' ')}\n          </Description>\n        </Wrapper>\n      )}\n      <hr />\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <Link to={`cost`} replace={true}>\n            Cost\n          </Link>\n        </li>\n        <li>\n          <Link to={`reviews`} replace={true}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <hr />\n      <Outlet />\n    </>\n  );\n}\nexport default MovieDetailsView;\n","// import { useState, useEffect } from 'react';\n\nconst API_KEY = '07bdf4dcb84de665a189c3d6f4d9143e';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst dayTrend = '/trending/movie/day';\n\nexport function FetchMovieApi() {\n  const url = `${BASE_URL}${dayTrend}?api_key=${API_KEY}`;\n  return fetchService(url).then(data => {\n    return data.results;\n  });\n}\n\nexport function FetchMovieDetailsApi(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`;\n  return fetchService(url);\n}\n\nexport function FetchCreditsApi(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  return fetchService(url).then(data => data.cast);\n}\nexport function FetchReviewsApi(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`;\n  return fetchService(url).then(data => data.results);\n}\nexport function SearchMovieByName(searchQuery) {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`;\n  return fetchService(url).then(data => data.results);\n}\n\nfunction fetchService(url) {\n  return fetch(url).then(r => {\n    if (!r.ok) {\n      throw Error(r.statusText);\n    }\n    return r.json();\n  });\n  // .then(data => {\n  //   if (data.total_pages === 0) {\n  //     throw Error(data.statusText);\n  //   }\n\n  //   return data;\n  // });\n}\n"],"names":["Wrapper","styled","Description","useState","movieDetails","setMovieDetails","movieId","useParams","navigate","useNavigate","console","log","useEffect","moviesSearchService","then","r","onClick","src","poster_path","alt","title","original_title","release_date","split","vote_average","overview","genres","map","genre","name","join","to","replace","API_KEY","BASE_URL","FetchMovieApi","fetchService","data","results","FetchMovieDetailsApi","FetchCreditsApi","cast","FetchReviewsApi","SearchMovieByName","searchQuery","url","fetch","ok","Error","statusText","json"],"sourceRoot":""}